{:deps
 ;; TODO: Make this operation
 [#_"https://auth.example.org/operations/get-user-identity"]

 :install
 {:juxt.site/subject-id "https://auth.example.org/_site/subjects/system"
  :juxt.site/operation-id "https://auth.example.org/_site/operations/create-operation"
  :juxt.site/input
  {:xt/id "{{$id}}"

   :juxt.site.malli/input-schema
   [:map
    [:xt/id [:re "https://auth.example.org/.*"]]
    [:juxt.site/user [:re "https://auth.example.org/users/.+"]]

    [:juxt.site.jwt.claims/iss [:re "https://.+"]]
    [:juxt.site.jwt.claims/sub {:optional true} [:string {:min 1}]]
    [:juxt.site.jwt.claims/nickname {:optional true} [:string {:min 1}]]]

   :juxt.site/prepare
   {:juxt.site.sci/program
    #juxt.pprint

    (let [content-type (-> *ctx*
                           :juxt.site/received-representation
                           :juxt.http/content-type)
          body (-> *ctx*
                   :juxt.site/received-representation
                   :juxt.http/body)]

      (case content-type
        "application/edn"
        (some->
         body
         (String.)
         clojure.edn/read-string
         juxt.site.malli/validate-input
         (assoc :juxt.site/type #{"https://meta.juxt.site/types/user-identity"
                                  "https://meta.juxt.site/types/openid-user-identity"}
                :juxt.site/methods
                {:get {:juxt.site/operations #{"https://auth.example.org/operations/get-user-identity"}}
                 :options {}}))))}

   :juxt.site/transact
   {:juxt.site.sci/program
    #juxt.pprint
    [[:xtdb.api/put *prepare*]]}

   :juxt.site/rules
   [
    [(allowed? subject operation resource permission)
     [permission :juxt.site/subject subject]]

    [(allowed? subject operation resource permission)
     [subject :juxt.site/user-identity id]
     [id :juxt.site/user user]
     [user :role role]
     [permission :role role]]]}}}
