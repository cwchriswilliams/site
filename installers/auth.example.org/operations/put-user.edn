{:deps ["https://auth.example.org/operations/get-user"]
 :install
 {:juxt.site/subject-id "https://auth.example.org/_site/subjects/system"
  :juxt.site/operation-id "https://auth.example.org/_site/operations/create-operation"
  :juxt.site/input
  {:xt/id "{{$id}}"

   :juxt.site.malli/input-schema
   [:map
    [:xt/id [:re "https://data.example.org/.*"]]]

   :juxt.site/prepare
   {:juxt.site.sci/program
    #juxt.pprint
    (let [content-type (-> *ctx*
                           :juxt.site/received-representation
                           :juxt.http/content-type)
          body (-> *ctx*
                   :juxt.site/received-representation
                   :juxt.http/body)]
      (case content-type
        "application/edn"
        (let [edn (some->
                   body
                   (String.)
                   clojure.edn/read-string
                   juxt.site.malli/validate-input)
              id (:xt/id edn)]
          [[:xtdb.api/put
            (assoc
             edn
             :juxt.site/type "https://meta.juxt.site/types/user"
             :juxt.site/methods
             {:get {:juxt.site/operations #{"https://auth.example.org/operations/get-user"}}}
             :juxt.site/protection-spaces #{"https://auth.example.org/protection-spaces/bearer"}

             :juxt.site/access-control-allow-origins
             [[".*" {:juxt.site/access-control-allow-origin "*"
                     :juxt.site/access-control-allow-methods [:get]
                     :juxt.site/access-control-allow-headers ["authorization" "hx-current-url" "hx-request"]}]]

             ;; It's nice to be able to access this resource via a browser
             ;;:juxt.site/session-scope "{{session-scope}}"
             )]

           ;; JSON version
           [:xtdb.api/put
            {:xt/id (str id ".json")
             :juxt.site/variant-of id
             :juxt.http/content-type "application/json"
             :juxt.site/methods
             {:get {:juxt.site/operations #{"https://auth.example.org/operations/get-user"}}}
             :juxt.site/protection-spaces #{"https://auth.example.org/protection-spaces/bearer"}
             :juxt.site/access-control-allow-origins
             [[".*" {:juxt.site/access-control-allow-origin "*"
                     :juxt.site/access-control-allow-methods [:get]
                     :juxt.site/access-control-allow-headers ["authorization"]}]]

             ;; It's nice to be able to access this resource via a browser
             ;;:juxt.site/session-scope "{{session-scope}}"

             :juxt.site/respond
             {:juxt.site.sci/program
              #juxt.pprint
              (let [content (jsonista.core/write-value-as-string *state*)]
                (-> *ctx*
                    (assoc :ring.response/body content)
                    (update :ring.response/headers assoc "content-length" (str (count (.getBytes content))))))}}]

           ;; HTML version
           [:xtdb.api/put
            {:xt/id (str id ".html")
             :juxt.site/variant-of id
             :juxt.http/content-type "text/html;charset=utf-8"
             :juxt.site/methods
             {:get {:juxt.site/operations #{"https://auth.example.org/operations/get-user"}}}
             :juxt.site/protection-spaces #{"https://auth.example.org/protection-spaces/bearer"}

             :juxt.site/access-control-allow-origins
             [[".*" {:juxt.site/access-control-allow-origin "*"
                     :juxt.site/access-control-allow-methods [:get]
                     :juxt.site/access-control-allow-headers ["authorization" "hx-current-url" "hx-request"]}]]

             ;; It's nice to be able to access this resource via a browser
             :juxt.site/session-scope "{{session-scope}}"

             :juxt.site/respond
             {:juxt.site.sci/program
              #juxt.pprint
              (let [content
                    (selmer/render
                     #juxt.template "
<div>
  <dl>
    <dt>Full name</dt>
    <dd>{{user.fullname}}</dd>
    <dt>All</td>
    <dd>{{user}}</dd>
  </dl>
</div>
\n"
                     {:user *state*}
                     )]
                (-> *ctx*
                    (assoc :ring.response/body content)
                    (update :ring.response/headers assoc "content-length" (str (count (.getBytes content))))))}}]])))}

   :juxt.site/transact
   {:juxt.site.sci/program
    #juxt.pprint
    *prepare*}

   :juxt.site/rules
   [
    [(allowed? subject operation resource permission)
     [permission :juxt.site/subject subject]]]}}}
