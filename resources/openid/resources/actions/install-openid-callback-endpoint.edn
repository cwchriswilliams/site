{:deps
 #{"https://example.org/actions/openid/exchange-code-for-id-token"}
 :create
 {:juxt.site/subject-id "https://example.org/subjects/system"
  :juxt.site/action-id "https://example.org/actions/create-action"
  :juxt.site/input
  {:xt/id "{{$id}}"

   :juxt.site.malli/input-schema
   [:map
    [:xt/id [:re "https://example.org/.*"]]
    [:juxt.site/openid-client-configuration [:re "https://example.org/.*"]]]

   :juxt.site/prepare
   {
    :juxt.site.sci/program
    #juxt.pprint
    (let [content-type (-> *ctx*
                           :juxt.site/received-representation
                           :juxt.http/content-type)
          body (-> *ctx*
                   :juxt.site/received-representation
                   :juxt.http/body)]

      (case content-type
        "application/edn"
        (some->
         body
         (String.)
         clojure.edn/read-string
         juxt.site.malli/validate-input
         (assoc
          :juxt.site/methods
          {:get
           {:juxt.site/actions #{"https://example.org/actions/openid/exchange-code-for-id-token"}}}
          :juxt.http/content-type "text/html;charset=utf-8"
          :juxt.http/content "<p>This should redirect</p>"))))}

   :juxt.site/transact
   {:juxt.site.sci/program
    #juxt.pprint
    [[:xtdb.api/put *prepare*]]}

   :juxt.site/rules
   [
    [(allowed? subject resource permission)
     [permission :juxt.site/subject subject]]

    [(allowed? subject resource permission)
     [subject :juxt.site/user-identity id]
     [id :juxt.site/user user]
     [permission :juxt.site/user user]]]}}}
