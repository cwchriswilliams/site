{:install
 {:juxt.site/input
  {:xt/id "{{$id}}"
   :juxt.site/description "The action to create all other actions"
   :juxt.site/type "https://meta.juxt.site/types/action"
   :juxt.site/do-action-tx-fn "https://example.org/_site/do-action"
   :juxt.site/events-base-uri "https://example.org/_site/events/"

   :juxt.site/rules
   [
    ;; Creating actions should only be available to the most trusted
    ;; subjects. Actions can write directly to the database, if they wish.
    [(allowed? subject action resource permission)
     [permission :juxt.site/subject subject]]]

   :juxt.site.malli/input-schema
   [:map
    ;; Our only constraint is that we always want the action to be in a
    ;; /actions/ context somewhere in the path (not necessarily at the root).
    [:xt/id [:re "https://.*?/actions/.+"]]
    [:juxt.site/rules [:vector [:vector :any]]]]

   :juxt.site/prepare
   {:juxt.site.sci/program
    #juxt.pprint
    (let [content-type (-> *ctx*
                           :juxt.site/received-representation
                           :juxt.http/content-type)
          body (-> *ctx*
                   :juxt.site/received-representation
                   :juxt.http/body)]
      (case content-type
        "application/edn"
        (some->
         body
         (String.)
         clojure.edn/read-string
         juxt.site.malli/validate-input
         (assoc
          :juxt.site/type "https://meta.juxt.site/types/action"
          :juxt.site/do-action-tx-fn "https://example.org/_site/do-action"
          :juxt.site/events-base-uri "https://example.org/_site/events/"))))}

   :juxt.site/transact
   {:juxt.site.sci/program
    #juxt.pprint
    [[:xtdb.api/put *prepare*]]}}}}
