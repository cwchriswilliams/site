{:xt/id "https://example.org/_site/packages/juxt/site/openid"
 :juxt.site/description "OpenID Connect"

 :juxt.site/uri-map
 [["https://example.org" {:juxt.site/description "Host of the OpenID client"}]
  ["https://core.example.org" {:juxt.site/description "Host of the Site core actions"}]]

 :juxt.site/dependencies
 [{:juxt.site/package "https://repo.juxt.site/packages/juxt/site/user-model"
   :juxt.site/host "https://example.org"}]

 :juxt.site/resources
 ["https://example.org/actions/openid/exchange-code-for-id-token"
  "https://example.org/actions/register-openid-issuer"
  "https://example.org/actions/register-openid-client"
  "https://example.org/actions/register-openid-user-identity"
  "https://example.org/permissions/system/register-openid-issuer"
  "https://example.org/permissions/system/register-openid-client"
  "https://example.org/permissions/system/register-openid-user-identity"]

 :commands
 {
  ;; TODO: Deprecate this? Is it used?
  :openid/register-issuer
  {:juxt.site/description "Register an OpenID issuer"
   :arguments [["iss" {:juxt.site/description "Issuer URL" :default [:juxt.site/issuer]}]]
   :juxt.site.sci/program
   #juxt.pprint
   (converge! [(format "https://example.org/openid/issuers/%s" (ring.util.codec/url-encode (get *args* "iss")))])}

  :openid/register-client
  {:juxt.site/description "Register an OpenID client"
   :arguments
   [["iss" {:juxt.site/description "Issuer URL"}]
    ["client-id" {:juxt.site/description "Client id"}]
    ["client-secret" {:juxt.site/description "Client secret"}]]

   :juxt.site.sci/program
   #juxt.pprint
   (do
     (assert (get *args* "iss") "iss (issuer) not given")
     (assert (get *args* "client-id") "client-id not given")
     (assert (get *args* "client-secret") "client-secret not given")
     (converge!
      [(format "https://example.org/openid/clients/%s" (ring.util.codec/url-encode (get *args* "client-id")))
       "https://example.org/login"
       "https://example.org/openid/callback"]
      (assoc *args*
             "issuer-configuration"
             (format "https://example.org/openid/issuers/%s" (ring.util.codec/url-encode (get *args* "iss")))
             "client-configuration"
             (format "https://example.org/openid/clients/%s" (get *args* "client-id")))))}

  :openid/register-user
  {:juxt.site/description "Register a user's identity"
   :arguments
   [["username" {:juxt.site/description "Username"}]
    ["fullname" {:juxt.site/description "User's full name"}]
    ["iss" {:juxt.site/description "Issuer URL"}]
    ["sub" {:juxt.site/description "Issuer's subject id"}]
    ["nickname" {:juxt.site/description "Subject nickname"}]]
   :juxt.site.sci/program
   #juxt.pprint
   (do
     (assert (get *args* "iss") "iss (issuer) not given")
     (assert (or (get *args* "sub") (get *args* "nickname")) "subject/nickname not given")
     (let [user (format "https://example.org/users/%s" (ring.util.codec/url-encode (get *args* "username")))
           sub (get *args* "sub")
           nickname (get *args* "nickname")]
       (converge!
        [user
         (cond
           sub
           (format "https://example.org/openid/user-identities/%s/sub/%s"
                   (ring.util.codec/url-encode (get *args* "iss"))
                   (ring.util.codec/url-encode (get *args* "sub")))

           nickname
           (format "https://example.org/openid/user-identities/%s/nickname/%s"
                   (ring.util.codec/url-encode (get *args* "iss"))
                   (ring.util.codec/url-encode (get *args* "nickname"))))

         ;; TODO: The grant-permission action should not here, rather,
         ;; create a new action called 'permit-user-to-authorize'
         ;; which can take the actual user, and this action can be
         ;; permitted to others without granting them the all-powerful
         ;; grant-permission permission.
         (format "https://example.org/permissions/%s-can-authorize" (get *args* "username"))]

        (merge *args* {"user" user}))))}}}
